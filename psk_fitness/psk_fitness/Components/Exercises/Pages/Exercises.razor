@page "/exercises"

@using psk_fitness.Interfaces
@inject IExerciseRepository ExerciseRepository
@inject AuthenticationStateProvider AuthenticationStateProvider
@inject IUserRepository userRepository

@rendermode InteractiveServer

<div class="d-flex align-items-center">
    <h3 class="me-3">Exercises:</h3> 
    <CreateExercise OnExerciseCreated="RefreshExercises" />
</div>

@if (exercises == null)
{
    <span>Loading...</span>
}
else if (exercises.Count == 0)
{
    <span>No exercises found.</span>
}
else
{
    @foreach (var exercise in exercises)
    {
        <li>@exercise.Title @exercise.Steps</li>
    }
}

@code {
    List<ExerciseDisplayDTO> exercises;

    protected override async Task OnInitializedAsync()
    {
        Console.WriteLine("Hello world from Blazor component!");
        await RefreshExercises();
    }

    async Task RefreshExercises()
    {
        var authState = await AuthenticationStateProvider.GetAuthenticationStateAsync();
        var userEmail = authState.User.Identity.Name;
        ApplicationUser user = userRepository.GetUserByIdAsync(userEmail).Result;


        exercises = await ExerciseRepository.GetExercisesForUser(user.Id);

        foreach (ExerciseDisplayDTO ex in exercises){
            Console.WriteLine(ex.Title);
        }

        StateHasChanged(); // Ensure UI refresh
    }
}