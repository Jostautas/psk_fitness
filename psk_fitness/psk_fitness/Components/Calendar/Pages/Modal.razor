@page "/modal"

@{
    var workoutTypes = new List<string> { "Chest", "Back", "Calves" };
}


<div class="d-flex flex-column">
    <div class="d-flex align-items-center">

        <div class="modal fade" id="calendarModal" tabindex="-1" aria-labelledby="calendarModalLabel" aria-hidden="true">
            <div class="modal-dialog">
                <div class="modal-content">
                    <div class="modal-header">
                        <h5 class="modal-title" id="newTopicModalLabel">Your workput</h5>
                        <button type="button" @onclick="() => OnDeleteWorkout()"  class="btn delete-button">Delete</button>
                    </div>

                    <div class="modal-body">
                        <form>
                       

                            <div class="time-picker">
                                <label for="startingTimeHours" class="form-label">Workout starting hour:</label>
                                <div class="d-flex align-items-center">
                                    @if (_doNotShowInputBoxes && selectedWorkout != null)
                                    {
                                        <span>@selectedWorkout.Duration.</span>
                                    }
                                    else{
                                        <input type="time" id="startHours" name="StartHours"  required />
                                     }
                                </div>
                            </div>

                            <div class="time-picker">
                                <label for="endTimeHours" class="form-label">Starting time:</label>
                                <div class="d-flex align-items-center">
                                    @if (_doNotShowInputBoxes && selectedWorkout != null)
                                    {

                                    }
                                    else{
                                        <input type="time" id="endHours" name="EndHours" required />
                                    }
                                </div>
                            </div>

                            <div class="mb-3">
                                <label for="dayWorkoutNotes" class="form-label">Notes</label>
                                @if(_doNotShowInputBoxes && selectedWorkout != null)
                                {
                                    <p>@selectedWorkout.Notes</p>
                                }
                                else
                                {
                                    <textarea class="form-control" id="dayWorkoutNotes" rows="3" placeholder="Enter notes" @bind="selectedWorkout.Notes"></textarea>
                                }
                            </div>
                        </form>
                    </div>

                    <div class="modal-footer d-flex justify-content-center">
                        <button type="button" @onclick="() => OnSaveWorkout()" class="btn btn-primary">Save</button>
                        @if (_doNotShowInputBoxes)
                        {
                            <button type="button" @onclick="() => ChangeModalState()" class="btn edit-button">Edit</button>
                        }
                        <button type="button" class="btn close-button" data-bs-dismiss="modal">Close</button>
                    </div>
                </div>
            </div>
        </div>

    </div>
</div>



@code {

    private WorkoutDisplayDTO selectedWorkout = new WorkoutDisplayDTO();
    private bool _doNotShowInputBoxes = true;


    @inject IJSRuntime JSRuntime;

    public async Task OpenAsync(WorkoutDisplayDTO singleDayWorkout)
    {
        selectedWorkout = singleDayWorkout;
        await JSRuntime.InvokeVoidAsync("openModal", "calendarModal");
        if (selectedWorkout.Title == "No title")
        {
            _doNotShowInputBoxes = false;
        }
        StateHasChanged();
    }


    public void OnDeleteWorkout()
    {
        Console.WriteLine("Delete");
    }

    public void OnSaveWorkout()
    {
        _doNotShowInputBoxes = true;
    }

    public void OnViewWorkoutPage()
    {
        
    }

    public void ChangeModalState()
    {
        _doNotShowInputBoxes = false;
    }


    public async Task CloseModal()
    {
        await JSRuntime.InvokeVoidAsync("closeModal", "calendarModal");

    }
}