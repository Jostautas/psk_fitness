@page "/calendar"
@using System.Globalization
@using psk_fitness.Client.Interfaces
@rendermode @(new InteractiveAutoRenderMode(prerender: false))
@{
    CultureInfo culture = new CultureInfo("en-US"); //Default to en-US calendar
}
@inject IWorkoutService WorkoutService

@inject IJSRuntime JSRuntime


<h3>Calendar</h3>

<Modal @ref="Modal"></Modal>

<button @onclick="() => Modal.Open()">Open Modal</button>

<h4>@(char.ToUpper(DateTime.Now.ToString("MMMM", culture)[0]) + DateTime.Now.ToString("MMMM", culture).Substring(1))</h4>


<div class="calendar">
    @for (var day = 1; day <= DateTime.DaysInMonth(DateTime.Now.Year, DateTime.Now.Month); day++)
    {
        var workout = Workouts?.FirstOrDefault(w => w.Day == day);
        
        <div class="calendar-day">
            <span class="day">@day</span>
            @if (workout == null)
            {
                <div class="workout-box">
                    <span>Rest</span>
                    <button class="edit-button" @onclick="() => Modal.Open()">Create</button>
                </div>
            }
            else
            {
                <div class="workout-box">
                    <span>@workout.Title</span>
                    <button class="edit-button" @onclick="() => Modal.Open(workout.Id)">Edit</button>
                </div>
            }

        </div>

    }
</div>

@code {
    Modal Modal { get; set; }

    List<WorkoutForCalendarDTO> Workouts { get; set; }

    protected override async Task OnInitializedAsync()
    {
        Workouts = await WorkoutService.GetByMonth(DateTime.Now.Year, DateTime.Now.Month);
        Console.WriteLine(Workouts);
    }

}